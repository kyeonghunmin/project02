<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
<mapper namespace="MemberDao">
  <!-- 여러 군데에서 중복되는 SQL 문을 분리하여 관리 -->
  <sql id="select01">
    select INO, INM, AGE, GEND, TEL, STEP, PASS, EMAIL
    from ID
  </sql>

  <!-- 테이블의 컬럼 이름과 VO 클래스의 프로퍼티 이름을 미리 연결해 둘 수 있다. -->
  <resultMap type="Member" id="MemberMap">
    <!-- PK 컬럼은 id 태그로 선언하라! -->
    <id     column="INO"    property="ino"/>
    <result column="INM"  property="name"/>
    <result column="AGE"    property="age"/>
    <result column="GEND"    property="gender"/>
    <result column="TEL"    property="tel"/>
    <result column="STEP"    property="step"/>
    <result column="PASS"    property="password"/>
    <result column="EMAIL"    property="email"/>
    <!-- 컬럼명과 프로퍼티명이 같을 때는 선언하지 않아도 된다. -->
  </resultMap>
  
  <!-- 파라미터나 결과에 대해 데이터 타입을 지정할 때,
       mybatis 설정 파일에 선언된 별명을 사용한다.
   -->
  <insert id="insert" parameterType="Member">
    insert into ID(INM, AGE, GEND, TEL, STEP, PASS, EMAIL)
    values(#{name},#{age},#{gender},#{tel},#{step},#{password},#{email})
  </insert>
  
  <update id="update" parameterType="Member">
    update MEMBERS set
      INM=#{name},
      AGE=#{age},
      GEND=#{gender}
      TEL=#{tel}
      STEP=#{step}
      PASS=#{password}
      EMAIL=#{email}
    where INO=#{ino}
  </update>
  
  <!-- parameterType이 원시 데이터 타입일 경우, 
      => 프로퍼티 이름은 아무거나 넣어도 된다.
   -->
  <delete id="delete" parameterType="int">
    delete from ID
    where INO=#{ino}
  </delete>

  <!-- resultMap에 컬럼에 대응하는 프로퍼티 정보를 미리 설정했기 때문에,
       SQL 문에서는 각 컬럼에 대해 별명을 부여할 필요가 없다.
       단, resultType 속성 대신 resultMap 속성을 지정해야 한다.
   -->
  <select id="selectList" resultMap="MemberMap">
    <include refid="select01"/>
    order by INM asc
  </select>
  
  <select id="selectOne" parameterType="map" resultMap="MemberMap">
    <include refid="select01"/>
    where 
    <if test="no != null">
      INO=#{ino}
    </if>
    <if test="email != null">
      EMAIL=#{email}
    </if>
  </select>
  
  <select id="isMember" parameterType="map" resultType="int">
    select count(*) 
    from ID
    where EMAIL=#{email} and PASS=#{password}
  </select>
</mapper>












